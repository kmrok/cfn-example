AWSTemplateFormatVersion: "2010-09-09"
Description: VPC, Subnet, InternetGateway, NATGateway, RouteTable, ACL

Parameters:
  Env:
    Type: String
    Description: environment
    Default: dev
    AllowedValues:
      - dev
      - stg
      - stress
      - prd

Mappings:
  EnvMap:
    dev:
      VPCCidrBlock: 10.0.0.0/16
    stg:
      VPCCidrBlock: 10.1.0.0/16
    stress:
      VPCCidrBlock: 10.2.0.0/16
    prd:
      VPCCidrBlock: 10.3.0.0/16

Resources:
# ------------------------------------------------------------
#  VPC
# ------------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [ EnvMap, !Ref Env, VPCCidrBlock ]
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${Env}-vpc

# ------------------------------------------------------------
#  Subnet
# ------------------------------------------------------------
  # -------------------------- #
  #  Public RouteTable
  # -------------------------- #
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-subnet-1a
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-subnet-1c

  # -------------------------- #
  #  Private Subnet
  # -------------------------- #
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-subnet-1a
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-subnet-1c

# ------------------------------------------------------------ #
#  InternetGateway
# ------------------------------------------------------------ #
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Env}-internet-gateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

# ------------------------------------------------------------ #
#  NatGateway
# ------------------------------------------------------------ #
  NatEIP1a:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatEIP1c:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGateway1a:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP1a.AllocationId
      SubnetId: !Ref PublicSubnet1a
      Tags:
        - Key: Name
          Value: !Sub ${Env}-nat-1a
  NatGateway1c:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP1c.AllocationId
      SubnetId: !Ref PublicSubnet1c
      Tags:
        - Key: Name
          Value: !Sub ${Env}-nat-1c

# ------------------------------------------------------------ #
#  RouteTable
# ------------------------------------------------------------ #
  # -------------------------- #
  #  Public RouteTable
  # -------------------------- #
  RouteTablePublic1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Env}-routetable-public-1a
  RouteTablePublic1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Env}-routetable-public-1c
  RoutePublic1a:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic1a
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  RoutePublic1c:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic1c
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref RouteTablePublic1a
  PublicSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1c
      RouteTableId: !Ref RouteTablePublic1c

  # -------------------------- #
  #  Private RouteTable
  # -------------------------- #
  RouteTablePrivate1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Env}-routetable-private-1a
  RouteTablePrivate1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Env}-routetable-private-1c
  RoutePrivate1a:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate1a
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1a
  RoutePrivate1c:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate1c
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1c
  PrivateSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref RouteTablePrivate1a
  PrivateSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      RouteTableId: !Ref RouteTablePrivate1c

# ---------------------------------------------------------------------- #
#  NetworkAcl
# ---------------------------------------------------------------------- #
  # -------------------------- #
  #  Public Subnet ACL
  # -------------------------- #
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-acl
  InboundPublicNetworkAclAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PublicNetworkAcl
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  OutboundPublicNetworkAclAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PublicNetworkAcl
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PublicSubnet1a
      - PublicNetworkAcl
    Properties:
      SubnetId: !Ref PublicSubnet1a
      NetworkAclId: !Ref PublicNetworkAcl
  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PublicSubnet1c
      - PublicNetworkAcl
    Properties:
      SubnetId: !Ref PublicSubnet1c
      NetworkAclId: !Ref PublicNetworkAcl

  # -------------------------- #
  #  Private Subnet ACL
  # -------------------------- #
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-acl
  InboundPrivateNetworkAclAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkAcl
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  OutboundPrivateNetworkAclAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkAcl
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  PrivateSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PrivateSubnet1a
      - PrivateNetworkAcl
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      NetworkAclId: !Ref PrivateNetworkAcl
  PrivateSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    DependsOn:
      - PrivateSubnet1c
      - PrivateNetworkAcl
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      NetworkAclId: !Ref PrivateNetworkAcl

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${Env}-vpc
  PublicSubnet1:
    Value: !Ref PublicSubnet1a
    Export:
      Name: !Sub ${Env}-public-subnet1
  PublicSubnet2:
    Value: !Ref PublicSubnet1c
    Export:
      Name: !Sub ${Env}-public-subnet2
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1a
    Export:
      Name: !Sub ${Env}-private-subnet1
  PrivateSubnet2:
    Value: !Ref PrivateSubnet1c
    Export:
      Name: !Sub ${Env}-private-subnet2
